version: '3.4'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  recsysdb-data:
    driver: local
  mongodb-data:
    driver: local

services:
  recsysapi.presentation:
    image: ${DOCKER_REGISTRY-}recsysapipresentation
    build:
      context: .
      dockerfile: RecSysApi/Dockerfile
    ports:
      - "6001:443"
    depends_on:
      - recsysdb
  ordersapi.presentation:
    image: ${DOCKER_REGISTRY-}ordersapipresentation
    build:
      context: .
      dockerfile: ../OrdersAPI/Dockerfile
    ports:
      - "6002:443"
    depends_on:
      - recsysdb
  recsysdb:
    image: "mcr.microsoft.com/mssql/server"
    volumes: 
        - recsysdb-data:/app
    ports:
        - "6003:1433"
    environment:
        SA_PASSWORD: "abcDEF123#"
        ACCEPT_EULA: "Y"
  mongodb:
    image: "mongo"
    volumes: 
        - mongodb-data:/app
    ports:
        - "6004:27017" 
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - recsysapi.presentation
  prometheus:
    container_name: prometheus
    build:
      context: .
      dockerfile: Dockerfile-prometheus
    ports:
      - "9090:9090"
    #volumes:
    #  - /etc/prometheus:/etc/prometheus
    #  - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
        - prometheus
    ports:
        - "3000:3000"
    volumes:
        - grafana-data:/var/lib/grafana
    restart: unless-stopped
networks:
  localdev:
    external:
      name: localdev